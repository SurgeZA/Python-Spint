{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Select an Task to perform: \n",
      "1. Add\n",
      "2. Subtract\n",
      "3. Multiply\n",
      "4. Divide\n",
      "4\n",
      "Enter first number: 50\n",
      "Enter second number: 2\n",
      "Your answer is 25.0\n"
     ]
    }
   ],
   "source": [
    "print (\"Select an Task to perform: \")\n",
    "print(\"1. Add\")\n",
    "print(\"2. Subtract\")\n",
    "print(\"3. Multiply\")\n",
    "print(\"4. Divide\")\n",
    "\n",
    "task = input()\n",
    "\n",
    "if task == \"1\": #Add\n",
    "   num1 = input(\"Enter first number: \")\n",
    "   num2 = input(\"Enter second number: \")\n",
    "   print (\"Your answer is \" + str(int(num1) + int(num2))) #Add intergers together then convert it back to string\n",
    "elif task == \"2\":\n",
    "   num1 = input(\"Enter first number: \")\n",
    "   num2 = input(\"Enter second number: \")\n",
    "   print (\"Your answer is \" + str(int(num1) - int(num2)))\n",
    "elif task == \"3\":\n",
    "   num1 = input(\"Enter first number: \")\n",
    "   num2 = input(\"Enter second number: \")\n",
    "   print (\"Your answer is \" + str(int(num1) * int(num2)))\n",
    "elif task == \"4\":\n",
    "   num1 = input(\"Enter first number: \")\n",
    "   num2 = input(\"Enter second number: \")\n",
    "   print (\"Your answer is \" + str(int(num1) / int(num2)))\n",
    "else :\n",
    "    print(\"Invalid\")\n",
    "    \n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "4\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
